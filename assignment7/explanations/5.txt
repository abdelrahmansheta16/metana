// 00      34          CALLVALUE    takes an input(16)
// 01      80          DUP1         duplicate this input and push it onto the stack
// 02      02          MUL          basically taking the input and place its square back onto the stack
// 03      610100      PUSH2 0100   push two bytes(0100) onto the stack
// 06      14          EQ           check if the last two items in the stack are equal(if equal replace them with 1 else with 0)
// 07      600C        PUSH1 0C     push 0C onto the stack
// 09      57          JUMPI        jump to the destination(0C) if the second element in the stack is equal to 1
// 0A      FD          REVERT
// 0B      FD          REVERT
// 0C      5B          JUMPDEST
// 0D      00          STOP
// 0E      FD          REVERT
// 0F      FD          REVERT